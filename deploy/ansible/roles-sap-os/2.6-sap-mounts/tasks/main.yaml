---

# Mount Filesystems
- name: "Mount Filesystems"
  mount:
    src: "{{ item.src }}"
    path: "{{ item.path }}"
    fstype: "{{ item.type }}"
    opts: defaults
    state: mounted
  vars:
    # Get all the hostnames in <SID>_SCS group and return only the first hostname
    nfs_server: "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"
  loop:
    - {tier: 'all', type: 'xfs', src: '/dev/vg_sap/lv_usrsap', path: '/usr/sap'}
    - {tier: 'preparation', type: 'xfs', src: '/dev/vg_sap/lv_usrsapinstall', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
    - {tier: 'hdb', type: 'xfs', src: '/dev/vg_sap/lv_hana_shared', path: '/hana/shared'}
    - {tier: 'hdb', type: 'xfs', src: '/dev/vg_hana_data/lv_hana_data', path: '/hana/data'}
    - {tier: 'hdb', type: 'xfs', src: '/dev/vg_hana_log/lv_hana_log', path: '/hana/log'}
    - {tier: 'hdb', type: 'xfs', src: '/dev/vg_hana_backup/lv_hana_backup', path: '/hana/backup'}
  when: (item.tier == "all" or item.tier == tier)


- name: Set the NFS Server name
  ansible.builtin.set_fact:
    nfs_server: "{{ query('inventory_hostnames', '{{ sap_sid|upper }}_SCS') | first }}"

# Mount Filesystems
- name: "Mount Filesystems when not using ANF"
  mount:
    src: "{{ item.src }}"
    path: "{{ item.path }}"
    fstype: "{{ item.type }}"
    opts: defaults
    state: mounted
  loop:
    - {tier: 'ers', type: 'nfs4', src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}', path: '/sapmnt/{{ sap_sid|upper }}'}
    - {tier: 'ers', type: 'nfs4', src: '{{ nfs_server }}:/usr/sap/install', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
    - {tier: 'hdb', type: 'nfs4', src: '{{ nfs_server }}:/usr/sap/install', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
    - {tier: 'dbload', type: 'nfs4', src: '{{ nfs_server }}:/usr/sap/install', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
    - {tier: 'dbload', type: 'nfs4', src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}', path: '/sapmnt/{{ sap_sid|upper }}'}
    # dbload is running from PAS and hence we do not need to remount these volumes again
    #- {tier: 'pas', type: 'nfs4', src: '{{ nfs_server }}:/usr/sap/install', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
    #- {tier: 'pas', type: 'nfs4', src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}', path: '/sapmnt/{{ sap_sid|upper }}'}
    - {tier: 'app', type: 'nfs4', src: '{{ nfs_server }}:/usr/sap/install', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
    - {tier: 'app', type: 'nfs4', src: '{{ nfs_server }}:/sapmnt/{{ sap_sid|upper }}', path: '/sapmnt/{{ sap_sid|upper }}'}
    - {tier: 'web', type: 'xfs', src: '/dev/vg_sap/lv_sapmnt', path: '/sapmnt'}
    - {tier: 'web', type: 'nfs4', src: '{{ nfs_server }}:/usr/sap/install', path: '/usr/sap/install'} # Special Install Structure; Destroy on Completion
  when:
    - sap_mnt is not defined
    - item.tier == tier


# Import this task only if the sap_mnt is defined, i.e. ANF is used
- import_tasks: 2.6.1-anf-mounts.yaml
  when:
    - sap_mnt is defined
    - sap_mnt | trim | length != 0


...
