# Inputs:
#   bom_name              - Nmae of BOM (ex: S41909SPS03_v0001ms)
#
#
# Outputs:
#   bom                   - object
#

---
# -------------------------------------+---------------------------------------8
#
# Description:  Check if BOM is Microsoft supplied and register BOM as an object.
#               If not, download from storage account location.
#
- name: Check for Microsoft Supplied BOM ({{ bom_name }})
  stat:
    path: "BOM-catalog/{{ bom_name }}/{{ bom_name }}.yaml"
  register: microsoft_supplied_bom
  delegate_to: localhost


# If Microsoft supplied BOM found
- name: Register Microsoft Supplied BOM {{ bom_name }}
  include_vars:
    file: "{{ microsoft_supplied_bom.stat.path }}"
    name: bom
  when: microsoft_supplied_bom.stat.exists

# If Microsoft supplied BOM not found

- name: Retrieve BOM ({{ bom_name }}) from Storage Account
  debug:
    msg: "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/boms/{{ bom_name }}/{{ bom_name }}.yaml{{ sapbits_sas_token }}"
    verbosity: 1
  when: not microsoft_supplied_bom.stat.exists


# If Microsoft supplied BOM not found

- name: Retrieve BOM ({{ bom_name }}) from Storage Account
  block:

    - name: Download BOM ({{ bom_name }}) from Storage Account
      get_url:
        url: "{{ sapbits_location_base_path }}/{{ sapbits_bom_files }}/boms/{{ bom_name }}/{{ bom_name }}.yaml{{ sapbits_sas_token }}"
        dest: "{{ inventory_dir }}/{{ bom_name }}.yaml"
        mode: 0644
      register: result
      until: result is succeeded
      retries: 10
      delay: 6
      delegate_to: localhost                                               # Causes action to occur on the Ansible Controller
      become: true

    - name: Register downloaded BOM ({{ bom_name }})
      include_vars:
        file: "{{ inventory_dir }}/{{ bom_name }}.yaml"
        name: bom

  when: microsoft_supplied_bom.stat.exists != true
# -------------------------------------+---------------------------------------8

...
